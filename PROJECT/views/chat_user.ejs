<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Client Side Chat</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <style>
        body {
            background-color: #e8f5e9;
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
        .chat-container {
            width: 90%;
            max-width: 900px;
            height: 80vh;
            display: flex;
            flex-direction: column;
            background: #f0fff4;
            border-radius: 15px;
            box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

        .chat-header {
            background: #4caf50;
            color: white;
            padding: 15px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            font-size: 18px;
            font-weight: bold;
        }

        .header-icons {
            display: flex;
            gap: 15px;
        }

        .header-icons i {
            cursor: pointer;
            transition: transform 0.3s ease-in-out;
        }

        .header-icons i:hover {
            transform: scale(1.2);
            color: #c8e6c9;
        }

        .chat-body {
            flex: 1;
            overflow-y: auto;
            padding: 15px;
            display: flex;
            flex-direction: column;
        }

        .message {
            max-width: 70%;
            padding: 10px;
            border-radius: 15px;
            margin-bottom: 10px;
            word-wrap: break-word;
        }

        .sent {
            align-self: flex-end;
            background: #81c784;
            color: white;
            text-align: right;
        }

        .received {
            align-self: flex-start;
            background: #c8e6c9;
            text-align: left;
        }

        .chat-input {
            display: flex;
            padding: 10px;
            background: white;
            border-top: 1px solid #ddd;
        }

        .chat-input input {
            flex: 1;
            padding: 10px;
            border: none;
            border-radius: 20px;
            outline: none;
            background: #f0fff0;
        }

        .chat-input button {
            background: #4caf50;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 50%;
            margin-left: 10px;
            cursor: pointer;
            transition: background 0.3s ease;
        }

        .chat-input button:hover {
            background: #388e3c;
        }

        @media (max-width: 768px) {
            .chat-container {
                height: 90vh;
                width: 100%;
                border-radius: 0;
            }
            .chat-header {
                font-size: 16px;
                padding: 10px;
            }
            .chat-input input {
                padding: 8px;
            }
            .chat-input button {
                padding: 8px 12px;
            }
        }

        #cross {
            position: fixed;
            top: 5px;
            left: 10px;
            line-height: 20px;
            font-size: 40px;
            border-radius: 100%;
        }
    </style>   
</head>
<body>

<!-- Back Button -->
<div id="cross" class="btn btn-outline-success" onclick="window.history.back();">
    <i class="fa-solid fa-xmark"></i>
</div>

<div class="chat-container">
    <!-- Chat Header -->
    <div class="chat-header">
        <span>Client Messages</span>
        <div class="header-icons">
            <i class="fa-solid fa-circle-user" title="Profile"></i>
            <i class="fa-solid fa-envelope" title="Mail"></i>
        </div>
    </div>

    <!-- Chat Body -->
    <div class="chat-body" id="chat-body">
        <!-- Default messages will be loaded here -->
    </div>

    <!-- Chat Input -->
    <div class="chat-input">
        <input type="text" id="message-input" placeholder="Type a message..." onkeypress="handleKeyPress(event)">
        <button onclick="sendMessage()"><i class="fa-solid fa-paper-plane" title="Send"></i></button>
    </div>
</div>

<script>
    // Default messages
    const defaultMessages = [
        { text: "Hello! How can I help you today?", type: "received" },
        { text: "Hi! I need some guidance with my diet plan.", type: "sent" },
        { text: "Sure! What specific questions do you have?", type: "received" },
        { text: "I'm not sure about my calorie intake.", type: "sent" }
    ];

    // Handle Enter key press
    function handleKeyPress(event) {
        if (event.key === 'Enter') {
            sendMessage();
        }
    }

    // Load chat from localStorage or initialize with default messages
    function loadChat() {
        const chatBody = document.getElementById("chat-body");
        const savedChat = localStorage.getItem('clientChat');
        
        if (savedChat) {
            chatBody.innerHTML = savedChat;
        } else {
            // Load default messages
            defaultMessages.forEach(msg => {
                const messageDiv = document.createElement("div");
                messageDiv.classList.add("message", msg.type);
                messageDiv.textContent = msg.text;
                chatBody.appendChild(messageDiv);
            });
        }
        chatBody.scrollTop = chatBody.scrollHeight;
    }

    async function sendMessage() {
        const input = document.getElementById("message-input");
        const message = input.value.trim();

        if (message !== "") {
            const chatBody = document.getElementById("chat-body");

            try {
                // Create and display the message immediately
                const newMessage = document.createElement("div");
                newMessage.classList.add("message", "sent");
                newMessage.textContent = message;
                chatBody.appendChild(newMessage);
                
                // Save to localStorage
                localStorage.setItem('clientChat', chatBody.innerHTML);
                
                // Auto-scroll to the bottom
                chatBody.scrollTop = chatBody.scrollHeight;
                
                // Send message to backend
                const response = await fetch('/client-messages', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        client_msg: message
                    })
                });

                if (!response.ok) {
                    console.error('Failed to save message');
                    newMessage.textContent += ' (failed to send)';
                    newMessage.style.color = 'red';
                }
                
                // Clear input
                input.value = "";
            } catch (error) {
                console.error('Error sending message:', error);
                alert('Error sending message');
            }
        }
    }

    // Load client messages from server when page loads
    async function loadClientMessages() {
        try {
            const response = await fetch('/client-messages');
            if (response.ok) {
                const messages = await response.json();
                const chatBody = document.getElementById("chat-body");
                
                // Only load from server if no local chat exists
                if (!localStorage.getItem('clientChat') && messages.length > 0) {
                    chatBody.innerHTML = '';
                    messages.forEach(msg => {
                        const messageDiv = document.createElement("div");
                        messageDiv.classList.add("message", "received");
                        messageDiv.textContent = msg.client_msg;
                        chatBody.appendChild(messageDiv);
                    });
                    localStorage.setItem('clientChat', chatBody.innerHTML);
                }
                
                chatBody.scrollTop = chatBody.scrollHeight;
            }
        } catch (error) {
            console.error('Error loading messages:', error);
        }
    }

    // Initialize chat when page loads
    window.addEventListener('DOMContentLoaded', () => {
        loadChat();
        loadClientMessages();
    });
</script>

</body>
</html>